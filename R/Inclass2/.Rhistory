print("Hello World!")
welcome <- "Hello World"
welcome
1+2
total <- 1+2
total
y <- c(2,-1,7,0,1)
x*y #Coordinate by coordinate product
x%*%y #Dot product
x
sum.1 <- x+1
sum.1
y <- c(2,-1,7,0,1)
x
#######################################################################
#                 Data Structures and Manipulation
#######################################################################
getwd()
setwd("C:\\Users\\Denisa\\Google Drive\\Fall14\\Data Analytics\\Notes\\Lect2")
# 1. Object creation:
#a. Expression
3+3
exp(2)
?exp
help(exp)
2*3
10/4
log(1)
2^3
sqrt(2)
#b. Assignment
a <- 3+3
b <- exp(2)
c=2*3
d=(10/4)^2
x <- Y <- 2
y
b
c
d
ls() # Lists all the elemnts of the workspace
#rm() removes element from the workspace
rm(a) #removes object from workspace;
#Logical operators
x == 2 #(vs. x = 2)
x != 2
x < 2
x > 1
a1
a3 <- (a1 | a2)     #or
# 2. Vectors
# Sequences.
vec1=1:10  #the colon operator
vec1
vec2=1:-10
vec2
vec3=seq(0,5,by=.5)
length(vec3)
vec3
vec4=seq(0,5,length=15)
vec4
a1 <-  x == 2
# Vectors with no pattern
A1 #why do we get an error here?
#Expression
a2 <- (a1 & (Y >2)) #and
x <= 2
c(1,2,3,4,5)
c(2,-1,7)
#Assignment
y <- c(2,-1,7,0,1)
#Vectors of characters
Sebastian = "crab")
bol <- c(TRUE, TRUE, FALSE)
bol
#repeating values
rep1=rep(1,5)
rep1
x <- c(1,2,3,4,5)
pets
char <- c("aa","bb", "cc", "dd")
rep2=rep("a",4)
length(y)
pets <- c(Bolt = "dog", Garfield = "cat",
summary(mariatal.status)
summary(custData.mariatal.status)
summary(custData.marital.status)
summary(marital.status)
install.packages("ggplot2")
library(ggplot2)
help(package=ggplot2)
setwd("C:\\Users\\Kyle\\Dropbox\\CS\\CS3654\\Inclass2")
#The health insurance customer data
load('exampleData.rData')
setwd("C:\\Users\\Kyle\\Dropbox\\CS\\CS3654\\R\\Inclass2")
#The health insurance customer data
load('exampleData.rData')
#Examine data
names(custdata)
summary(custdata) #for the entire data frame
load.csv('car.data')
csv.load('car.data')
load('car.data')
read.csv('car.data')
read.csv('car.data.csv')
uciCar = read.csv('car.data.csv')
summary(uciCar)
load('credit.rData')
load('credit.rData')
summary(d.Personal.status.and.sex)
summary(Personal.status.and.sex)
View(d)
summary(d.frame.Personal.status.and.sex)
summary(d.Personal.status.and.sex)
summary('Personal.status.and.sex')
summary('d.Personal.status.and.sex')
summary(Personal.status.and.sex)
summary(d)
summary(d$Personal.status.and.sex)
summary(d$Other.debtors/guarantors)
summary(d$Other.debtors/guarantors)
summary(d$Other.debtors\/guarantors)
summary(d$Other.debtor//guarantors)
summary(d$Other.debtor/guarantors)
summary(d$Other.debtors/guarantors)
summary(d$Other.debtors)
summary(d$Personal.status.and.sex)
install.packages("hexbin")
hexbin("custdata2")#Visualizations
library("hexbin")
hexbin("custdata2")#Visualizations
hexbin(custdata2.age, custdata2.income)
setwd("C:\\Users\\Kyle\\Dropbox\\CS\\CS3654\\R\\Inclass2")
load('exampleData.rData')
# The range for "custid" is very large, and the column name is not clear
# is.employed has missing data
# Income has a very wide range, as well as possibly some invalid values
# num.vehicles is missing data
# age.normalized is not clear what it represents, nor is income.norm
summary(uciCar)
# The data seems to be in a strange format (though I know it's CSV)
# The distribution seems very wide and very little data can be gleaned from it
load('credit.rData')
# Clearly data that needs to be fixed up to be usable
# Without looking up the key values there is no way for us to know how sex compares with personal status
uciCar = read.csv('car.data.csv')
# gp is not a clear column name, nor is income.lt.30k
summary(d$Personal.status.and.sex)
# Housing.type and recent.move both have missing data
# is.employed.fix1 is not a clear column name
summary(custdata)
summary(d$Other.debtors)
# income is missing data
# age has some invalid values (at the high end and low end)
# We also get no information from this column
# We can conclude the german credit data will not be easy to work with and the values are arbitrary and not clear
install.packages("hexbin")
library("hexbin")
install.packages("hexbin")
library("hexbin")
hexbin(custdata2.age, custdata2.income)
hexbin(custdata.age, custdata.income)
View(custdata)
hexbin(custdata.age, custdata.Income)
hexbin(custdata$age, custdata$Income)
ggplot(custdata) +
geom_histogram(aes(x=age),
binwidth = 5)+
theme_bw() #to make background white
#Density plots
help(package=hexbin)
hexbinplot(custdata$age, custdata$Income)
hexbinplot(custdata)
hexbinplot(custdata$age, custdata$income)
